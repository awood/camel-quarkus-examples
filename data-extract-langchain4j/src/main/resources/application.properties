## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

quarkus.banner.enabled = false

# Configure Quarkus LangChain4j that handle interactions with the Large Language Model
quarkus.langchain4j.ollama.timeout = 3m
quarkus.langchain4j.ollama.chat-model.model-id = codellama
quarkus.langchain4j.ollama.chat-model.format = json
quarkus.langchain4j.ollama.chat-model.temperature = 0

# Uncomment lines below to log Ollama client requests and responses
#quarkus.langchain4j.ollama.log-requests=true
#quarkus.langchain4j.ollama.log-responses=true

# Or uncomment lines below to log HTTP traffic between langchain4j & the LLM API
#quarkus.rest-client.logging.scope=request-response
#quarkus.rest-client.logging.body-limit=10000
#quarkus.log.category."org.jboss.resteasy.reactive.client.logging".level=DEBUG

# Uncomment if your application image is to be pushed to an external registry
#quarkus.container-image.registry=my.docker-registry.net

# Kubernetes

# Uncomment to trust self signed certificates if they are presented by the Kubernetes API server
#quarkus.kubernetes-client.trust-certs=true

quarkus.kubernetes.image-pull-policy=IfNotPresent
quarkus.kubernetes.env.vars.db-hostname=mariadb-database

# Enable the application to resolve the MariaDB credentials via a secret
quarkus.kubernetes.env.secrets=mariadb-secret
quarkus.kubernetes.env.mapping.db-user.from-secret=mariadb-secret
quarkus.kubernetes.env.mapping.db-user.with-key=db-user
quarkus.kubernetes.env.mapping.db-password.from-secret=mariadb-secret
quarkus.kubernetes.env.mapping.db-password.with-key=db-password

# Uncomment to set resource limits
#quarkus.kubernetes.resources.requests.memory=64Mi
#quarkus.kubernetes.resources.requests.cpu=250m
#quarkus.kubernetes.resources.limits.memory=512Mi
#quarkus.kubernetes.resources.limits.cpu=1000m

# OpenShift
quarkus.openshift.image-pull-policy=IfNotPresent
quarkus.openshift.env.vars.db-hostname=mariadb-database

# Uncomment to set resource limits
#quarkus.openshift.resources.requests.memory=64Mi
#quarkus.openshift.resources.requests.cpu=250m
#quarkus.openshift.resources.limits.memory=512Mi
#quarkus.openshift.resources.limits.cpu=1000m
